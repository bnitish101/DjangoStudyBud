Username: nitish
Email address: bnitish101@gmail.com
Pass: nitish

Username: nio
Email address: nio@gmail.com
Pass: userpass

Username: nitish
Email address: 
Pass: admin123$

# it will check if q is not None the don't set get parameter eg. isset get parameter
q = request.GET.get('q') if request.GET.get('q') != None else ''

# icontains will check at least match with q values with case insenstive, contains will check with case sentive
rooms = Room.objects.filter(topic__name__icontains=q)

# ------------ cb+ s (IMAGE UPLOAD) ------------ #
- models.py: To use ImageField need to install Pillow
- HINT: Get Pillow at https://pypi.org/project/Pillow/ or run command "python -m pip install Pillow".
- where to upload and how to render out the image
- settings.py: MEDIA_ROOT = 'BASE_DIR / 'static/images'  # where to upload/save file
- settings.py: MEDIA_URL = '/images/' # pre fix image while rendering out the images, same as static file
- next ew need to confg main project urls.py file eg. studybud/urls.py 
- studybud/urls.py: here need to add file path to this urls.py file
- studybud/urls.py: import django.conf import settings
- studybud/urls.py: import django.conf.urls.static import static
- studybud/urls.py: append static in urlpatterns eg. urlpatterns += static(settings.MEDIA_URL, document_root.MEDIA_ROOT)
- render the image in the template following by avatar.url
- add enctype="multipart/form-data" to update user form to send the file data
- views.py: receive file data on submit form. eg. form = UserForm(request.POST, request.FILES, instance=user)
# ------------ cb+ e (IMAGE UPLOAD) ------------ #

- models.py:create new class MyUserCreationForm and abstract UserCreationForm and specify the user creation form fields. eg. fields = ['name', 'username', 'email', 'password1', 'password2']
- views.py: import the MyUserCreationForm in views.py and call the MyUserCreationForm.